// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.WebApi.DataAccess;

namespace Product.WebApi.Migrations
{
    [DbContext(typeof(ProductsContext))]
    [Migration("20190227102539_RowVersion")]
    partial class RowVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Product.WebApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Product.WebApi.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("ManufactureAddress")
                        .HasMaxLength(100);

                    b.Property<string>("ManufactureName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("ManufacturerId");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("Product.WebApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description")
                        .HasColumnType("ProductDescription")
                        .HasMaxLength(250);

                    b.Property<int>("ManufacturerId");

                    b.Property<int>("OwnerId");

                    b.Property<decimal>("Price")
                        .HasColumnType("ProductPrice");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("ProductName")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Product.WebApi.Models.ProductOwner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("OwnerAddress")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("OwnerEmail")
                        .HasMaxLength(50);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Phone")
                        .HasColumnType("OwnerPhone")
                        .HasMaxLength(50);

                    b.HasKey("OwnerId");

                    b.ToTable("ProductOwner");
                });

            modelBuilder.Entity("Product.WebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("UserEmail")
                        .HasMaxLength(150);

                    b.Property<string>("FirstName")
                        .HasColumnType("FirstName")
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .HasColumnType("LastName")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("UserName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("UserPassword")
                        .HasMaxLength(150);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Product.WebApi.Models.Category", b =>
                {
                    b.HasOne("Product.WebApi.Models.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Product.WebApi.Models.Product", b =>
                {
                    b.HasOne("Product.WebApi.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Product.WebApi.Models.Manufacturer", "Producer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Product.WebApi.Models.ProductOwner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
